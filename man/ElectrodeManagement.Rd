% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Methods-ERGElectrode.R
\name{ElectrodeManagement}
\alias{ElectrodeManagement}
\alias{AddElectrode}
\alias{DropElectrode}
\alias{UpdateElectrode}
\title{Electrode Management Methods for ERGExam Objects}
\usage{
AddElectrode(X, newElectrode)

DropElectrode(X, electrodeName)

UpdateElectrode(X, newElectrode, addIfNew = T)
}
\arguments{
\item{X}{An \linkS4class{ERGExam}, \linkS4class{ERGMeasurements}, or \linkS4class{ERGElectrode} object.}

\item{newElectrode}{An \linkS4class{ERGElectrode} object (used in \code{AddElectrode} and \code{UpdateElectrode}).}

\item{electrodeName}{A character string specifying the name of the electrode to be dropped or updated.}

\item{addIfNew}{for \code{UpdateElectrode} Should the electrode be added as new electrode if an electrode with the same name does not yet exist? Default: \code{TRUE}.}
}
\value{
The modified \linkS4class{ERGExam} object.
}
\description{
These functions manage electrodes of an \linkS4class{ERGExam} object.
They provide the following operations:
}
\details{
The electrode name is always determined by calling \code{Name(newElectrode)}.
}
\section{Functions}{
\itemize{
\item \code{AddElectrode()}: Adds an \linkS4class{ERGElectrode}. Electrodes with identical names are not permitted within one \linkS4class{ERGExam} object.

\item \code{DropElectrode()}: Removes an electrode from an \linkS4class{ERGExam} object by its name.

\item \code{UpdateElectrode()}: Replaces/updates an existing electrode (identified by its name) with a new \linkS4class{ERGElectrode} object.
The matching electrode is found by the name stored in the \linkS4class{ERGElectrode} object.

}}
\examples{
data(ERG)
Electrodes(ERG)
e1 <- newERGElectrode("GND", "Platinum", "Tail", as_units(100, "Ohm"))
e1
\dontrun{ERG<-AddElectrode(ERG,e1) # this fails, because an electrode of the same name already exists}
ERG<-UpdateElectrode(ERG,e1)
Electrodes(ERG)
e1 <- newERGElectrode("NotInObject", "Platinum", "Tail", as_units(100, "Ohm"))
e1
ERG<-UpdateElectrode(ERG,e1)
Electrodes(ERG)
\dontrun{ERG<-UpdateElectrode(ERG, e1, addIfNew = F) # This will fail as adding is not permitted}

ERG<-DropElectrode(ERG, "NotInObject")
Electrodes(ERG)

}
